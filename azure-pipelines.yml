variables:
  buildConfiguration: 'Release'
  
steps:
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: 'Get-Process | Where-Object {$_.MainWindowTitle -ne ""} | stop-process'

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '**/*.csproj'
  displayName: 'Build'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: 'C:\services\ADOS\Agent\Agent001\_work\4\s\OLDMutual.CTS.Authentication\bin\Debug\net5.0'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/Authentication'
  displayName: 'Authentication'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: 'C:\services\ADOS\Agent\Agent001\_work\4\s\OLDMutual.CTS.Admin\bin\Debug\net5.0'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/Admin'
  displayName: 'Admin'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: 'C:\services\ADOS\Agent\Agent001\_work\4\s\OLDMutual.CTS.DomainDefinition\bin\Debug\net5.0'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/DomainDefinition'
  displayName: 'DomainDefinition'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: 'C:\services\ADOS\Agent\Agent001\_work\4\s\OLDMutual.CTS.ManualDataLoad\bin\Debug\net5.0'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/ManualDataLoad'
  displayName: 'ManualDataLoad'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: 'C:\services\ADOS\Agent\Agent001\_work\4\s\OLDMutual.CTS.UserManagement\bin\Debug\net5.0'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/UserManagement'
  displayName: 'UserManagement'



- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: true
  displayName: 'DotNet Publish'  

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: 'Remove-Item -LiteralPath "C:\services\ADOS\Agent\Agent001\_work\4\s\ClientApp\node_modules" -Force -Recurse -ErrorAction Ignore'

- task: Npm@1
  inputs:
    command: 'custom'
    workingDir: 'C:\services\ADOS\Agent\Agent001\_work\1\s\ClientApp'
    customCommand: 'rebuild'

- task: Npm@1
  inputs:
    command: 'custom'
    workingDir: 'C:\services\ADOS\Agent\Agent001\_work\1\s\ClientApp'
    customCommand: 'cache clean --force'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: 'Get-Process | Where-Object {$_.MainWindowTitle -ne ""} | stop-process'

- task: Npm@1
  inputs:
    command: 'install'
    workingDir: 'C:\services\ADOS\Agent\Agent001\_work\4\s\ClientApp'
  displayName: 'Npm install'

- task: Npm@1
  inputs:
    command: 'custom'
    workingDir: 'C:\services\ADOS\Agent\Agent001\_work\4\s\ClientApp'
    customCommand: 'install -g @angular/cli@11.2.12'
  displayName: 'angular cli'


- task: AngularCLI@1
  inputs:
    command: 'build'
    project: 'C:\services\ADOS\Agent\Agent001\_work\4\s\ClientApp'
    arguments: '--prod --base-href /ctsweb/ --build-optimizer=false'
    prod: false
    DisableAnalytics: false
 
- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: 'C:\services\ADOS\Agent\Agent001\_work\4\s\ClientApp\dist\ctsweb'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/ctsweb.zip'
    replaceExistingArchive: true

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'Pipeline Artifacts'
    publishLocation: 'Container'


